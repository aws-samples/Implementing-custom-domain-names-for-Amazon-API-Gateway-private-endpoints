name: Validate and Format
run-name: "${{ github.actor }} pushed to ${{ github.ref_name }}"
on:
  push:
    branches: 
       - 27-add-pre-merge-checks
permissions:
  contents: write
jobs:
  Terraform:
    runs-on: ubuntu-latest
    env:
      working-directory: ./terraform
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.ref_name }}
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0
      - name: Terraform Format
        id: fmt
        working-directory: ${{env.working-directory}}
        run: terraform fmt
      - name: Terraform Init with Upgrade
        id: init
        working-directory: ${{env.working-directory}}
        run: |
          cp ../samples/proxy-config.yaml ../config/proxy-config.yaml
          cp ../samples/vars.yaml ../config/proxy-config.yaml
          terraform init -upgrade
      - name: Terraform Validate
        id: validate
        run: terraform validate
      - name: Terraform Security
        id: tfsec
        uses: aquasecurity/tfsec-action@v1.0.3
        with:
          working_directory: ${{env.working-directory}}
      - name: Generate Terraform Docs
        id: tfdoc
        uses: terraform-docs/gh-actions@v1.0.0
        with:
          working-dir: ${{ env.working-directory }}
          output-file: README.md
      - name: Commit terraform changes
        id: tfcommit
        working-directory: ${{ env.working-directory }}
        run: |
          if ! git status | grep -e '^nothing to commit, working tree clean'; then
            git config user.name 'github-actions[bot]'
            git add .
            git commit -m "Automated updates generated by terraform checks."
            git push
          fi
  CDK:
    runs-on: ubuntu-latest
    env:
      working-directory: ./cdk
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.ref_name }}
      - uses: actions/setup-node@v3
        with:
          node-version: '>=16.15.0'
      - name: Install npm requirements
        working-directory: ${{ env.working-directory }}
        run: |
          npm install
      - name: Format
        id: prettier
        working-directory: ${{ env.working-directory }}
        run: |
          npm run format
      - name: Lint
        id: eslint
        working-directory: ${{ env.working-directory }}        
        run: |
          npm run lint
      - name: Commit cdk changes
        id: tfcommit
        working-directory: ${{ env.working-directory }}
        run: |
          if ! git status | grep -e '^nothing to commit, working tree clean'; then
            git config user.name 'github-actions[bot]'
            git add .
            git commit -m "Automated updates generated by cdk checks."
            git push
          fi
      